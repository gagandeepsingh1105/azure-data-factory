{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "carsalespipeline-adf"
		},
		"ls_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls'"
		},
		"ls_azure_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_azure_databricks'"
		},
		"ls_azure_sql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azure_sql'"
		},
		"ls_azure_sqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azure_sqldb'"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://carsalesdeltalake.dfs.core.windows.net/"
		},
		"ls_azure_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0225-165112-4i4zgfcn"
		},
		"ls_azure_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adf-practice-srvr.database.windows.net"
		},
		"ls_azure_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adf-practice-db"
		},
		"ls_azure_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"ls_azure_sqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "carsales-dbserver.database.windows.net"
		},
		"ls_azure_sqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "carsales-db"
		},
		"ls_azure_sqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carsalesadmin"
		},
		"ls_git_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1759451320624636.16.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_azure_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_azure_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azure_sql_properties_typeProperties_server')]",
					"database": "[parameters('ls_azure_sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azure_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azure_sql_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azure_sqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_azure_sqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azure_sqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azure_sqldb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_git')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_git_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_layer": {
						"type": "string"
					},
					"p_directory": {
						"type": "string"
					},
					"p_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_layer",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_directory": {
						"type": "string"
					},
					"p_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_directory": {
						"type": "string"
					},
					"p_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_git_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_git",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "anshlambagit/Azure-DE-Project-Resources/refs/heads/main/Raw%20Data/@{dataset().p_filename}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_git')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "dbo",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().p_tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_sqldb_to_adls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fetch_last_load_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select date from last_load_date \nunion\nselect max(Date_ID) from carsales_data",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"p_tablename": {
										"value": "last_load_date",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "sqldb_to_adls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "fetch_last_load_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from carsales_data where Date_ID > '@{activity('fetch_last_load_date').output.value[0].date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"p_tablename": "carsales_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls",
								"type": "DatasetReference",
								"parameters": {
									"p_layer": "bronze",
									"p_directory": "raw",
									"p_filename": "source"
								}
							}
						]
					},
					{
						"name": "update_last_load_date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sqldb_to_adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_last_load_date]",
							"storedProcedureParameters": {
								"load_date": {
									"value": {
										"value": "@activity('fetch_last_load_date').output.value[1].date",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "broze_to_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_last_load_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/gagandeepsingh1105@gmail.com/carsales_project/data_transformation"
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "silver_to_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "broze_to_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/gagandeepsingh1105@gmail.com/carsales_project/star_schema",
							"baseParameters": {
								"load_type": "I"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"test_param": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-12T14:06:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldb')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_driven_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Table_List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select table_name,\nlast_read_snapshot\n from table_details where is_active=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azure_sql",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "table_details"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate_Table_List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Table_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Table_List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_Table",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get_max_Snapshot",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ',item().table_name,' where snapshot_date > ''',item().last_read_snapshot, '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_azure_sql",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_csv",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "adf-ques/azure-demo",
												"p_directory": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"p_filename": {
													"value": "@concat(activity('Get_max_Snapshot').output.value[0].max_date,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "update_last_read_snapshot",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy_Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[update_last_read_snapshot]",
										"storedProcedureParameters": {
											"table_name": {
												"value": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"snapshot_date": {
												"value": {
													"value": "@activity('Get_max_Snapshot').output.value[0].max_date",
													"type": "Expression"
												},
												"type": "Datetime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azure_sql",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get_max_Snapshot",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select max(snapshot_date) as max_date from ',item().table_name)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_azure_sql",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-12T14:06:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azure_sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "git_to_sqldb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_git_src",
								"type": "DatasetReference",
								"parameters": {
									"p_filename": {
										"value": "IncrementalSales.csv",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"p_tablename": "carsales_data"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-28T16:24:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_git_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/first_dfl')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference"
							},
							"name": "superstoredata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "calculateprofit"
						},
						{
							"name": "droploss"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Row ID} as short,",
						"          {Order ID} as string,",
						"          {Order Date} as date,",
						"          {Ship Date} as date,",
						"          {Ship Mode} as string,",
						"          {Customer ID} as string,",
						"          {Customer Name} as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          {Postal Code} as integer,",
						"          Region as string,",
						"          {Product ID} as string,",
						"          Category as string,",
						"          {Sub-Category} as string,",
						"          {Product Name} as string,",
						"          Sales as string,",
						"          Quantity as string,",
						"          Discount as double,",
						"          Profit as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> superstoredata",
						"droploss aggregate(groupBy(Category),",
						"     total_profit = sum(Profit)) ~> calculateprofit",
						"superstoredata filter(Profit > 0) ~> droploss",
						"calculateprofit sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['aggregate-data.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/update_snapshot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     p_snapshot as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(snapshot = toDate($p_snapshot,'yyyy-MM-dd')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['date.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_with_dfl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "first_dfl",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoredata": {
										"p_container": "adf-ques",
										"p_directory": "source",
										"p_filename": "superstore.csv"
									},
									"sink1": {
										"p_container": "adf-ques",
										"p_directory": "source",
										"p_filename": "aggregate-data.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/first_dfl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_with_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_prev_snapshot",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adf-ques",
									"p_directory": "source",
									"p_filename": "date.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "read_filenames",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_prev_snapshot",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_max_snapshot",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select file_name from raw_data where snapshot_date>''',activity('Lookup_prev_snapshot').output.value[0].snapshot,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azure_sql",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "raw_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_csv",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adf-ques",
									"p_directory": "source",
									"p_filename": "filenames.csv"
								}
							}
						]
					},
					{
						"name": "Lookup_max_snapshot",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(snapshot_date) as max_snapshot from raw_data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azure_sql",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "raw_data"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "update_snapshot",
								"type": "DataFlowReference",
								"parameters": {
									"p_snapshot": {
										"value": "'@{variables('v_snapshot')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {
										"p_container": "adf-ques",
										"p_directory": "source",
										"p_filename": "date.csv"
									},
									"sink1": {
										"p_container": "adf-ques",
										"p_directory": "source",
										"p_filename": "date.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "read_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_snapshot",
							"value": {
								"value": "@activity('Lookup_max_snapshot').output.value[0].max_snapshot",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_snapshot": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_sql')]",
				"[concat(variables('factoryId'), '/dataflows/update_snapshot')]"
			]
		}
	]
}